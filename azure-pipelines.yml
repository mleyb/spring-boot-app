# Gradle

# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:

- task: PythonScript@0
  inputs:
    scriptSource: 'inline'
    script: |
      import os
      import json
      import adal
      
      _SERVICE_PRINCIPAL_ID = 'servicePrincipalId'
      _SERVICE_PRINCIPAL_TENANT = 'servicePrincipalTenant'
      _TOKEN_ENTRY_TOKEN_TYPE = 'tokenType'
      _ACCESS_TOKEN = 'accessToken'

- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'
